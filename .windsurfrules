# 🏫 Workspace Rules – FlutterFlow School App

## 🗂️ Firestore Collection Structure:

- `users/` → User documents with `uid`, `role`, `schoolCode`, profile info
- `group_member/` → Maps users to roles, subject taught, schoolCode, class assigned
- `tasks/` → Task documents including `lessonPlanReport`, `teacherName`, `schoolCode`
- `student_master/{schoolCode}/{class}/students` → All student details per class
- `marks/{schoolCode}/{class}/{exam}` → Marks for each subject/student
- `attendance/{schoolCode}/{class}/{date}` → Daily or classwise attendance
- `homework/{schoolCode}/{class}/` → Uploaded homework
- `notifications/{schoolCode}` → Admin to user notifications
- `report_cards/` → Compiled term-wise reports per student

## 🗃️ Firebase Storage Structure:

- `users/{userId}/question_papers/` → PDFs generated by teachers
- `users/{userId}/lesson_plans/` → Lesson plans created and downloaded
- `public/` → Static images (logos, templates)
- `assignments/` → Future uploadable docs for tasks, homework, etc.

## 👥 User Roles:
- **principal**: creates school, manages teachers, downloads reports
- **teacher**: joins via schoolCode, adds students, uploads marks, lesson plans
- **parent**: views reports, attendance, homework of children
- **student**: (read-only in most flows)

## 🔁 Functional Logic Guidelines:

- Teachers generate question papers & lesson plans
- Teachers create/manage their own class (if class teacher)
- Student roll numbers and names are entered by teacher only
- Teacher can upload marks/attendance only for assigned classes
- Principal can assign classes to teachers from group_member
- PDF uploads/downloads must go through Firebase Storage only
- Always check `group_member` to verify role + authority
- Parent is linked to student via reference → can view relevant records only

## ✅ Implemented Feature Modules:

- [x] Task Assignment (Lesson Plan with Firestore & PDF)
- [x] Question Paper Generator (Structured PDF with section marks)
- [x] Firebase Storage integration
- [x] PDF Launching via download URL
- [x] Role-based view filters (principal sees all, teacher sees assigned)

## 🔜 Coming Features:

- [ ] Marks Upload (per class/subject, visible to principal)
- [ ] Attendance Module (day-wise or class-wise)
- [ ] Report Card Generation (term-wise with assessments)
- [ ] Parent Dashboard (child-specific info, homework & report access)

## ⚙️ Development Guidelines:

- All task-related data must be stored under `tasks/` or specific subcollections
- PDF generation should be clean, structured, and uploaded before launching
- Avoid hardcoded paths – always build them using userId/schoolCode/class
- Support custom actions in FlutterFlow to handle Firebase + PDF + logic
- No logic duplication – reuse actions and Firestore schema

